---
Description: "Simple autoscaling hello world web app template."
AWSTemplateFormatVersion: 2010-09-09
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 192.168.0.0/24
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 192.168.0.0/26
      AvailabilityZone: "us-east-1a"
      MapPublicIpOnLaunch: true
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 192.168.0.64/26
      AvailabilityZone: "us-east-1b"
      MapPublicIpOnLaunch: true
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 192.168.0.128/26
      AvailabilityZone: "us-east-1a"
      MapPublicIpOnLaunch: true
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 192.168.0.192/26
      AvailabilityZone: "us-east-1b"
      MapPublicIpOnLaunch: true
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable
  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet1
  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet2
  PrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PrivateSubnet1
  PrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PrivateSubnet2
  LoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      LoadBalancerName: LoadBalancer
      Listeners:
        - InstancePort: 8080
          InstanceProtocol: HTTP
          LoadBalancerPort: 8080
          Protocol: HTTP
      Scheme: internet-facing
      SecurityGroups:
        - !Ref SecurityGroup
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
  AppLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: true
      ImageId: 'ami-0ac019f4fcb7cb7e6'
      InstanceType: t2.micro
      KeyName: 'boeing'
      SecurityGroups:
        - !Ref SecurityGroup
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          set -x
          sudo apt update
          sudo apt install ruby -y
          cd /home/ubuntu
          wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install
          wget https://20190125-assignment.amazon.aws.com/hello_world_app.tar.gz
          tar xzvf hello_world_app.tar.gz .
          chmod +x ./binary/hello_world_app
          ./binary/hello_world_app &
          chmod +x ./install
          sudo ./install auto
          service codedeploy-agent start
          service codedeploy-agent status
      IamInstanceProfile: !Ref EC2CodeDeployInstanceProfile
    DependsOn: VPCGatewayAttachment
  EC2CodeDeployInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - manual_ec2_to_codedeploy
  HelloWorldAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones:
        - us-east-1a
        - us-east-1b
      DesiredCapacity: 1
      LaunchConfigurationName: !Ref AppLaunchConfiguration
      LoadBalancerNames:
        - !Ref LoadBalancer
      MaxSize: 2
      MinSize: 1
      VPCZoneIdentifier:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: 20190125assignment-thaniri
      #AccessControl: PublicRead
  HelloWorldCodeDeploy:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: HelloWorld
  HelloWorldDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref HelloWorldCodeDeploy
      DeploymentGroupName: HelloWorld
      ServiceRoleArn: arn:aws:iam::042363331216:role/thaniri-code-deploy
      AutoScalingGroups:
        - !Ref HelloWorldAutoScalingGroup
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "Internet Group"
      GroupDescription: "Public faciing"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
          Description: "Allow SSH inbound from internet."
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: 0.0.0.0/0
          Description: "Allow HTTP inbound from internet."
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: "Allow anything outbound."

